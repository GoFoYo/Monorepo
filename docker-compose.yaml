version: "3"
services:
  # MQTT for communication
  mqtt:
    image: eclipse-mosquitto
    container_name: ayoti_mqtt
    volumes:
      - ./mosquitto:/mosquitto
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    ports:
      - 1883:1883
      - 9001:9001
    networks:
      mqtt_network:

  # PG for storing data
  postgres_db:
    image: postgres:latest
    container_name: ayoti_postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: test_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/structure.sql:/docker-entrypoint-initdb.d/structure.sql
    ports:
      - "5432:5432"
    networks:
      db_network:

  # PgAdmin - UI for PG
  pgadmin:
    container_name: ayoti_pgadmin4
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      db_network:

  # Redis for hub
  redis:
    image: redis:latest
    container_name: ayoti_redis
    ports:
      - "6379:6379"
    networks:
      hub_redis:

  # Store from schema
  store:
    container_name: ayoti_store
    build: ./store
    depends_on:
      - postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: test_db
      POSTGRES_HOST: postgres_db
      POSTGRES_PORT: 5432
    ports:
      - "8000:8000"
    networks:
      hub_store:
      db_network:
      hub:

  # EDGE from schema
  edge:
    container_name: ayoti_edge
    build: ./edge
    depends_on:
      - mqtt
      - hub

    environment:
      MQTT_BROKER_HOST: "mqtt"
      MQTT_BROKER_PORT: 1883
      MQTT_TOPIC: "agent_data_topic"
      HUB_HOST: "hub"
      HUB_PORT: 8000
      HUB_MQTT_BROKER_HOST: "mqtt"
      HUB_MQTT_BROKER_PORT: 1883
      HUB_MQTT_TOPIC: "processed_data_topic"
    networks:
      mqtt_network:
      edge_hub:

  # HUB from schema
  hub:
    container_name: ayoti_hub
    build: ./hub
    depends_on:
      - mqtt
      - redis
      - store
    environment:
      STORE_API_HOST: "store"
      STORE_API_PORT: 8000
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      MQTT_BROKER_HOST: "mqtt"
      MQTT_BROKER_PORT: 1883
      MQTT_TOPIC: "processed_data_topic"
    ports:
      - "9000:8000"
    networks:
      mqtt_network:
      hub_store:
      hub_redis:

  # AGENT from schema
  fake_agent:
    container_name: ayoti_agent
    build: ./agent
    depends_on:
      - mqtt
    environment:
      MQTT_BROKER_HOST: "mqtt"
      MQTT_BROKER_PORT: 1883
      MQTT_TOPIC: "agent_data_topic"
      DELAY: 0.1
    networks:
      mqtt_network:
networks:
  mqtt_network:
  db_network:
  edge_hub:
  hub:
  hub_store:
  hub_redis:

volumes:
  postgres_data:
  pgadmin-data:
